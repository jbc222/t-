#install.packages("dplyr")
#install.packages("tidyverse")
#install.packages("officer")
#install.packages("flextable")

# 导入所需的包
library(dplyr)
library(tidyverse)
library(readxl)
library(officer)
library(flextable)

# 读取原始数据（请确保Excel文件路径正确）
data <- read_excel("data.xlsx")

# 计数资料分析 - 性别差异（卡方检验）
# 比较不同分组（对照组和观察组）之间的性别差异
table_gender <- table(data$分组, data$性别)
chi_test_gender <- chisq.test(table_gender)

# 输出卡方检验结果 - 性别差异
print(chi_test_gender)

# t检验分析 - 年龄差异
# 比较不同分组（对照组和观察组）之间的年龄均值差异
t_test_age <- t.test(data$年龄 ~ data$分组)

# 输出t检验结果 - 年龄
print(t_test_age)

# t检验分析 - 计量资料（治疗前后对比）
# Berg 治疗前后对比
# 按分组进行 t 检验 - Berg 治疗前后
t_test_berg_group1 <- t.test(data$Berg治疗前[data$分组 == 1], data$Berg治疗后[data$分组 == 1], paired = TRUE)
t_test_berg_group2 <- t.test(data$Berg治疗前[data$分组 == 2], data$Berg治疗后[data$分组 == 2], paired = TRUE)

# 按分组进行 t 检验 - BI 治疗前后
t_test_bi_group1 <- t.test(data$BI治疗前[data$分组 == 1], data$BI治疗后[data$分组 == 1], paired = TRUE)
t_test_bi_group2 <- t.test(data$BI治疗前[data$分组 == 2], data$BI治疗后[data$分组 == 2], paired = TRUE)

# 按分组进行 t 检验 - Fugl-meyer 治疗前后
t_test_fugl_meyer_group1 <- t.test(data$Fuglmeyer治疗前[data$分组 == 1], data$Fuglmeyer治疗后[data$分组 == 1], paired = TRUE)
t_test_fugl_meyer_group2 <- t.test(data$Fuglmeyer治疗前[data$分组 == 2], data$Fuglmeyer治疗后[data$分组 == 2], paired = TRUE)



# 创建Word文档
word_doc <- officer::read_docx()

# 添加描述性统计
# 描述性统计函数
descriptive_statistics <- function(data, group_var, desc_vars) {
  desc_stats <- data %>%
    group_by(!!sym(group_var)) %>%
    summarise(across(all_of(desc_vars), list(mean = mean, sd = sd), .names = "{col}_{fn}")) %>%
    mutate(across(ends_with("mean"), round, 2), across(ends_with("sd"), round, 2)) %>%
    pivot_longer(cols = -!!sym(group_var), names_to = c("variable", "stat"), names_sep = "_") %>%
    pivot_wider(names_from = stat, values_from = value) %>%
    mutate(描述统计 = paste0(mean, " ± ", sd)) %>%
    select(!!sym(group_var), variable, 描述统计) %>%
    pivot_wider(names_from = variable, values_from = 描述统计)
  return(desc_stats)
}

# 获取描述性统计
desc_stats <- descriptive_statistics(data, "分组", c("年龄", "Berg治疗前", "Berg治疗后", "BI治疗前", "BI治疗后", "Fuglmeyer治疗前", "Fuglmeyer治疗后"))

# 添加描述性统计到Word文档
word_doc <- word_doc %>%
  body_add_par("表1 两组患者的一般资料的描述性统计", style = "heading 2") %>%
  body_add_flextable(flextable(desc_stats))

# 性别分析 - 不同分组下性别数量统计
gender_counts <- data %>%
  group_by(分组, 性别) %>%
  summarise(数量 = n()) %>%
  pivot_wider(names_from = 性别, values_from = 数量, values_fill = 0) %>%
  rename(男 = 1, 女 = 0)

# 添加性别数量统计到Word文档
word_doc <- word_doc %>%
  body_add_par("表2 两组患者的性别数量统计", style = "heading 2") %>%
  body_add_flextable(flextable(gender_counts))

# 添加三线表到Word文档
# 三线表格式化函数
add_three_line_table_to_doc <- function(doc, t_result, title) {
  table_data <- data.frame(
    "统计量" = c("t值", "自由度", "p值"),
    "结果" = c(round(t_result$statistic, 3), round(t_result$parameter, 3), round(t_result$p.value, 3))
  )
  ft <- flextable(table_data) %>%
    theme_booktabs() %>%
    autofit()
  doc <- doc %>%
    body_add_par(title, style = "heading 2") %>%
    body_add_flextable(ft)
  return(doc)
}

# 性别分析（卡方检验）
chi_table_data <- data.frame(
  "统计量" = c("卡方值", "p值"),
  "结果" = c(round(chi_test_gender$statistic, 3), round(chi_test_gender$p.value, 3))
)
ft_chi <- flextable(chi_table_data) %>%
  theme_booktabs() %>%
  autofit()
word_doc <- word_doc %>%
  body_add_par("表3 两组患者的一般资料的比较 - 性别差异（卡方检验）", style = "heading 2") %>%
  body_add_flextable(ft_chi)

# 年龄分析
word_doc <- add_three_line_table_to_doc(word_doc, t_test_age, "表4 两组患者的一般资料的比较 - 年龄差异")

# Berg, BI, Fugl-meyer 结果
word_doc <- add_three_line_table_to_doc(word_doc, t_test_berg_group1, "表5 Berg治疗前后的比较")
word_doc <- add_three_line_table_to_doc(word_doc, t_test_berg_group2, "表5 Berg治疗前后的比较")
word_doc <- add_three_line_table_to_doc(word_doc, t_test_bi_group1, "表6 BI治疗前后的比较")
word_doc <- add_three_line_table_to_doc(word_doc, t_test_bi_group2, "表6 BI治疗前后的比较")
word_doc <- add_three_line_table_to_doc(word_doc, t_test_fugl_meyer_group1, "表7 Fugl-meyer治疗前后的比较")
word_doc <- add_three_line_table_to_doc(word_doc, t_test_fugl_meyer_group2, "表7 Fugl-meyer治疗前后的比较")


# 保存Word文档
print(word_doc, target = "t_tests_results.docx")

